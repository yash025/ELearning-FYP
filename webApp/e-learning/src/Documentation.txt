1. 
url: /login
method: get
object recieved from ui: userinfo = { email : '', password: ''} 
return: { status: 200/ anything, 
          data: { result : (true if correct userinfo else false), 
                  message : (Could be error message or successfully logged in message.) 
                 }
        }
*********************************************************************************************

2. 
url: /register
method: post
object recieved from ui: userinfo = {
                                        name: '',
                                        email : '',
                                        password: '',
                                        age: ''
                                    }
return: { status }

*********************************************************************************************
categories: ['Digit','Alphabet', 'Object']

3. 
url: /canvas
method: post
object from ui: data (json object) 
                if(data.type == learning)
                    data = {
                            type: "learning",
                            dataUrl: "base64 string",
                            category: Could be any from the above list (categories[]),
                            selected: name of the element that is selected
                            }
                else if (Data.type == drawing)
                    data = {
                            type: "drawing",
                            dataUrl: "base64 string",
                            chosen: name of randomly chosen element,
                            level: (1 or 2 or 3)
                            }
return : {
            status: 200/ something,
            data: {
                result: true/false (stating whether the drawing is correct.)
            }

}

*********************************************************************************************  

4. 
url: /updateCompleted
method: post
object from ui: if(data.type == "learning")
                 data = { type: "learning",
                         element: element that is completed learning, 
                         category: category of the element}
                else if( data.type == "drawing")
                data = { type: "drawing", 
                         points: increased points of the user to update in the DB
                         }
Purpose: Update the element in the DB that its completed/ update the DB with the increased points.
return: {
            status: 200/anything 
        }
*********************************************************************************************

5. 
url: /completedList
method: get
object recieved from ui: none
return: {
            status: 200/anything,
            data: {
                    completed: [A list of all elements that are leart completely]
            }
}
*********************************************************************************************

6.
url: /points
method: get
object recieved from ui: none
return: {
            status: 200/anything,
            data: {
                points: points for the user in the DB
            }
}
*********************************************************************************************

7.
url: /profile
method: get
object recieved from ui: data = { email: primary key required for querying the user.}
return: {
        status: 200/anything,
        data: {
            profile : {
                        name: name of the user,
                         email: email,
                         password: password,
                         age: age
            }
        }
}
*********************************************************************************************

8.
url: /updateProfile
method: post
object recieved from ui: profileInfo = {oldEmail : "", ... (rest of the keys which are updated)};
                                        if(email is not updated)
                                            oldEmail = "";
                                        else
                                            oldEmail = (value of old email required to change the PK of the user in DB)
return: { status: 200/anything }
